/*
Given root of the Binary Search Tree(BST) & an integer value.
Find the node in the BSRT such that the node's value equals value and returns the subtree rooted with that node.

Input:
root = [4,2,7,1,3] val =2
Output:
[2,1,3]
*/

class Solution{
   public:
    TreeNode*searchBST(TreeNode*root, int val){
      if(root == NULL){
         return NULL;
      }if(root->val == val){
         return root;
      }if(root->val > val){
         return searchBST(root->left, val);
      }else{
         return searchBST(root->right, val);
      }
}
};
