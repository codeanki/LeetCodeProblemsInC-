/*
Given head, the head of a linked list, determine if the linked list has a cycle in it.
 Return true if there is a cycle in the linked list, otherwise return false.
 
 Input: head = [3,2,0,-4], pos = 1
 Output = true
 
 */
 class Solution{
   public:
     bool hasCycle(ListNode*head){
        ListNode*slow = head, *fast = head;
        while(fast!=NULL && fast->next!=NULL){
          slow = slow->next;
          fast = fast->next->next;
          if(slow == fast)
          return true;
        }
      return false;
     }
};
